Define TreeNode and perform inorder, preorder, and postorder on that tree.


import java.util.*;
class TreeNode {
    int data;
    TreeNode left;
    TreeNode right;

    TreeNode(int data) {
        this.data = data;
        this.left = null;
        this.right = null;
    }
}
class BinaryTree {
    public void inorderTraversal(TreeNode root) {
        if (root != null) {
            inorderTraversal(root.left); 
            System.out.print(root.data + " ");
            inorderTraversal(root.right); 
        }
    }
        
    public void preorderTraversal(TreeNode root) {
        if (root != null) {
            System.out.print(root.data + " ");
            preorderTraversal(root.left);
            preorderTraversal(root.right);
        }
    }
    
    public void postorderTraversal(TreeNode root) {
        if (root != null) {
            postorderTraversal(root.left);
            postorderTraversal(root.right);
            System.out.print(root.data + " ");
        }
    }
}

public class Question1 {
    public static void main(String[] args) {
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);
        root.left.left = new TreeNode(4);
        root.left.right = new TreeNode(5);

        BinaryTree tree = new BinaryTree();


        System.out.print("Inorder Traversal: ");
        tree.inorderTraversal(root);  // Output: 4 2 5 1 3
        System.out.println();

        System.out.print("Preorder Traversal: ");
        tree.preorderTraversal(root); // Output: 1 2 4 5 3
        System.out.println();

        System.out.print("Postorder Traversal: ");
        tree.postorderTraversal(root); // Output: 4 5 2 3 1
        System.out.println();
    }
}


